// Code generated by goctl. DO NOT EDIT!
// Source: bitMapRpc.proto

package server

import (
	"context"

	"github.com/weblfe/bitmap_service/rpc/bitMapServ/rpc"
	"github.com/weblfe/bitmap_service/rpc/internal/logic"
	"github.com/weblfe/bitmap_service/rpc/internal/svc"
)

type BitMapServServer struct {
	svcCtx *svc.ServiceContext
}

func NewBitMapServServer(svcCtx *svc.ServiceContext) *BitMapServServer {
	return &BitMapServServer{
		svcCtx: svcCtx,
	}
}

func (s *BitMapServServer) Ping(ctx context.Context, in *rpc.PingRequest) (*rpc.PingResponse, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *BitMapServServer) UserKeeper(ctx context.Context, in *rpc.RpcSingleRequest) (*rpc.RpcSingleResponse, error) {
	l := logic.NewUserKeeperLogic(ctx, s.svcCtx)
	return l.UserKeeper(in)
}

func (s *BitMapServServer) UserKeepers(ctx context.Context, in *rpc.RpcMulitRequest) (*rpc.RpcMulitResponse, error) {
	l := logic.NewUserKeepersLogic(ctx, s.svcCtx)
	return l.UserKeepers(in)
}

func (s *BitMapServServer) ChannelsUserKeepers(ctx context.Context, in *rpc.RpcMulitChannelsRequest) (*rpc.RpcMulitChannelsResponse, error) {
	l := logic.NewChannelsUserKeepersLogic(ctx, s.svcCtx)
	return l.ChannelsUserKeepers(in)
}
